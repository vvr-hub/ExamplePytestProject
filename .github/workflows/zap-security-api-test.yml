name: Run OWASP ZAP API Security Test

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  zap-api-security-scan:
    name: OWASP ZAP API Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      ZAP_API_TEST: true

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üîß Install OWASP ZAP CLI
        run: |
          sudo snap install zaproxy --classic
          zaproxy -version

      - name: ‚öôÔ∏è Start OWASP ZAP in Daemon Mode (API key disabled)
        run: |
          nohup zaproxy -daemon -host 127.0.0.1 -port 8090 -config api.disablekey=true &
          sleep 30
          echo "ZAP is running on port 8090"

      - name: üß™ Run Pytest OWASP ZAP API Security Scan
        run: |
          pytest tests/test_security_scan_api.py --maxfail=1 --disable-warnings

      - name: üìù Print ZAP Report Summary to GitHub Actions log
        if: always()
        run: |
          echo "---- ZAP API Scan Summary ----"
          echo ""
          if [[ -f zap_api_report.html ]]; then
            grep -A 5 -i "alertitem" zap_api_report.html | grep "<riskdesc>" | sort | uniq -c | sed 's/<[^>]*>//g'
          else
            echo "Report not found!"
          fi
          echo ""
          echo "---- End of Summary ----"

      - name: üì§ Upload ZAP API Security Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-api-security-report
          path: zap_api_report.html
